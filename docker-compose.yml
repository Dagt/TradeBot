version: "3.9"
services:
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=trading
    ports:
      - "5432:5432"
    volumes:
      - tsdb-data:/var/lib/postgresql/data
      - ./sql/schema_timescale.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      - timescaledb

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn tradingbot.apps.api.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./src:/app/src
      - ./monitoring:/app/monitoring
    environment:
      - SENTRY_ENABLED=${SENTRY_ENABLED:-false}
      - SENTRY_DSN=${SENTRY_DSN:-}
      - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-development}
      - PG_HOST=timescaledb
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB=trading
      - API_USER=monitor
      - API_PASS=securepassword
    ports:
      - "8000:8000"
    depends_on:
      - timescaledb

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - api

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - "9093:9093"
    depends_on:
      - api

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./monitoring/grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./monitoring/grafana/datasources/postgres.yml:/etc/grafana/provisioning/datasources/postgres.yml
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/users:/etc/grafana/provisioning/users
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
      - alertmanager

  questdb:
    image: questdb/questdb:latest
    ports:
      - "9000:9000"   # REST API
      - "8812:8812"   # PostgreSQL wire protocol
    volumes:
      - questdb-data:/root/.questdb
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/health" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  tsdb-data:
  questdb-data:
